version: '3'
services:
  reverse-proxy:
    image: traefik
    command: --api.insecure=true --providers.docker --providers.docker.exposedByDefault=false
    restart: "no"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - HEX-to-RGB
  
  HEX-to-RGB:
    build: ../HEX-to-RGB
    image: hex2rgb
    restart: "no"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.HEX-to-RGB.rule=PathPrefix(`/HEX-to-RGB`)"
      - "traefik.http.routers.HEX-to-RGB.middlewares=HEX-to-RGB-stripprefix"
      - "traefik.http.services.HEX-to-RGB.loadbalancer.server.port=3000"
      - "traefik.http.middlewares.HEX-to-RGB-stripprefix.stripprefix.prefixes=/HEX-to-RGB"

#  <microservice-example-name>:
#    build: <microservice-example-name>
#    restart: "no"
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.<microservice-example-name>.rule=PathPrefix(`/<microservice-example-name>`)"
#      - "traefik.http.routers.<microservice-example-name>.middlewares=<microservice-example-name>-stripprefix"
#      - "traefik.http.services.<microservice-example-name>.loadbalancer.server.port=3000"
#      - "traefik.http.middlewares.<microservice-example-name>-stripprefix.stripprefix.prefixes=/<microservice-example-name>"
